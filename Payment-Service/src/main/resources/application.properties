spring.application.name=Payment-Service

server.port= 7074

user-service.name=User-Service
user-service.url=http://localhost:7076/api/v1/user

spring.datasource.url=jdbc:postgresql://localhost:5432/masse_payment
spring.datasource.username=postgres
spring.datasource.password=korede345
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always

#THINGS THAT I ADDED IN THE APPLICATION
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.show-sql=trueserver.port=${PORT}
#server.error.include-message=always
#server.error.include-binding-errors=always
#server.error.include-stacktrace=on_param
#server.error.include-exception=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod=DEBUG
##stripe.secretKey=${STRIPE_SECRET_KEY}
stripe.secretKey=sk_test_51RGyhmQoJtMh0aEdFcZzTvkDxTjMiwe9ijYO5L97aYuKpaWrQWcWwbC1bqR0B5IMSqbn2pDHVoTQOUco2tWv5Km700ekTiH6wQ
#
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=payment-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
#
#


